<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxProfile.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Oj09/w+MZhRmvuiHEgAAAABJRU5ErkJggg==
</value>
  </data>
</root>